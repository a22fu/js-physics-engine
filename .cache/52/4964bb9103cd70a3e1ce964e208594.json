{"id":"collision/Manifold.ts","dependencies":[{"name":"C:\\Users\\alex\\Desktop\\Coding corner\\physics-engine\\js-physics-engine\\package.json","includedInParent":true,"mtime":1708991028690}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Manifold = void 0;\nvar Manifold = /** @class */function () {\n  function Manifold(A, B) {\n    this.contactPoints = [];\n    this.A = A;\n    this.B = B;\n  }\n  return Manifold;\n}();\nexports.Manifold = Manifold;"},"sourceMaps":{"js":{"mappings":[{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":7,"column":4}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":7,"column":12}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":7,"column":15}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":7,"column":28}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":7,"column":40}},{"source":"collision/Manifold.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":8,"column":2}},{"source":"collision/Manifold.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":8,"column":11}},{"source":"collision/Manifold.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":8,"column":19}},{"source":"collision/Manifold.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":8,"column":20}},{"source":"collision/Manifold.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":8,"column":21}},{"source":"collision/Manifold.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":8,"column":23}},{"source":"collision/Manifold.ts","name":null,"original":{"line":11,"column":32},"generated":{"line":8,"column":24}},{"source":"collision/Manifold.ts","name":null,"original":{"line":11,"column":32},"generated":{"line":8,"column":26}},{"source":"collision/Manifold.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":9,"column":4}},{"source":"collision/Manifold.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":9,"column":8}},{"source":"collision/Manifold.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":9,"column":9}},{"source":"collision/Manifold.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":9,"column":22}},{"source":"collision/Manifold.ts","name":null,"original":{"line":10,"column":25},"generated":{"line":9,"column":25}},{"source":"collision/Manifold.ts","name":null,"original":{"line":10,"column":27},"generated":{"line":9,"column":27}},{"source":"collision/Manifold.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":10,"column":4}},{"source":"collision/Manifold.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":10,"column":8}},{"source":"collision/Manifold.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":10,"column":9}},{"source":"collision/Manifold.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":10,"column":10}},{"source":"collision/Manifold.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":10,"column":13}},{"source":"collision/Manifold.ts","name":null,"original":{"line":12,"column":14},"generated":{"line":10,"column":14}},{"source":"collision/Manifold.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":11,"column":4}},{"source":"collision/Manifold.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":11,"column":8}},{"source":"collision/Manifold.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":11,"column":9}},{"source":"collision/Manifold.ts","name":null,"original":{"line":13,"column":10},"generated":{"line":11,"column":10}},{"source":"collision/Manifold.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":11,"column":13}},{"source":"collision/Manifold.ts","name":null,"original":{"line":13,"column":14},"generated":{"line":11,"column":14}},{"source":"collision/Manifold.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":12,"column":2}},{"source":"collision/Manifold.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":13,"column":2}},{"source":"collision/Manifold.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":13,"column":9}},{"source":"collision/Manifold.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":13,"column":17}},{"source":"collision/Manifold.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":14,"column":0}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":14,"column":1}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":14,"column":2}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":14,"column":3}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":0}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":7}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":8}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":16}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":19}},{"source":"collision/Manifold.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":27}}],"sources":{"collision/Manifold.ts":"import { Vec } from \"../geometry/Vector\";\r\n\r\nimport { Shape } from \"../bodies/Shape\";\r\n\r\nexport class Manifold {\r\n  A: any;\r\n  B: any;\r\n  penetration: number;\r\n  normal: Vec;\r\n  contactPoints: Vec[] = [];\r\n  constructor(A: Shape, B: Shape) {\r\n    this.A = A;\r\n    this.B = B;\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"424d4e9acb544225d2fc715800fc0af7","cacheData":{"env":{}}}